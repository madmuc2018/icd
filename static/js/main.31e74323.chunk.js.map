{"version":3,"sources":["components/logo.png","components/consent.pdf","stores/auth.js","Data/api.js","components/MyNavBar.js","components/AsyncAwareContainer.js","components/utils.js","components/RefreshButton.js","components/HomePage/HomePage.js","components/FormRow.js","components/StressSlider.js","components/IncludePage/IncludePage.js","components/DetailsPage/DetailsPage.js","components/RegisterPage/RegisterPage.js","stores/consent.js","components/LoginPage/LoginPage.js","components/ConsentPage/ConsentPage.js","components/CollectorPage/CollectorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth","getToken","localStorage","getItem","setToken","token","setItem","JSON","stringify","loggedIn","trim","logout","removeItem","API","authHeader","headers","Authorization","concat","Auth","ApiException","message","status","this","axiosError","e","defaultMessage","response","data","api","register","_register","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","role","wrap","_context","prev","next","axios","post","t0","stop","_x","_x2","_x3","apply","arguments","login","_login","_callee2","_ref","_ref$data","_context2","sent","Error","abrupt","_x4","_x5","getTaskLatest","_getTaskLatest","_callee3","guid","result","_context3","get","_x6","getTasks","_getTasks","_callee4","_context4","updateTask","_updateTask","_callee5","nTask","_context5","put","globalUniqueID","_x7","_x8","includeTask","_includeTask","_callee6","_context6","_x9","getPublishedTasks","_getPublishedTasks","_callee7","_context7","collect","_collect","_callee8","link","_context8","_x10","MyNavBar","react_default","createElement","Navbar","style","backgroundColor","Nav","className","lib","fontWeight","color","to","Button","variant","Collapse","AsyncAwareContainer","loading","undefined","props","length","Modal","show","centered","Body","Spinner","animation","React","children","Component","utils","propercase","text","split","map","item","index","toUpperCase","join","timeout","ms","Promise","resolve","setTimeout","checkErrorForLogout","error","router","alert","replace","RefreshButton","onClick","window","location","reload","index_esm","momentDurationFormatSetup","moment","duration","HomePage","FOR_INSTRUCTOR","HomePage_HomePageInstructor","routerHistory","history","HomePage_HomePageStudent","HomePageInstructor","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tasks","chartData","activeTasks","filter","t","completed","completedTasks","setState","publishedTasks","_tasks$source","source","s","published","name","estimatedStress","estimatedHours","reduce","d","submittedStress","stress","meanStress","group","componentUnmounted","_this2","BlueBreakline","borderTop","borderColor","TasksStatistics","Container","Row","Col","margin","Card","total","format","kc1","kc2","Brand","display","flexFlow","minHeight","flex","order","Header","padding","as","Title","Text","key","width","size","HomePage_TasksBarChart","keysColors","Image","src","logo","height","fluid","HomePageStudent","_this3","components_AsyncAwareContainer","i","TasksBarChart","increaseScale","_this4","decreaseScale","_ref2","es6","top","right","left","bottom","strokeDasharray","dataKey","kc","fill","PureComponent","FormRow","FormControl","placeholder","type","onChange","StressSlider","xl","nouislider_react_umd_production_min_default","start","orientation","direction","range","min","max","step","tooltips","from","Number","v","pips","mode","values","density","onEnd","Guard","_React$useState","useState","_React$useState2","slicedToArray","setShow","handleClose","onHide","Footer","IncludePage","regulatedStartDate","regulatedEndDate","focusedInput","notes","handleChange","event","_event$target","target","value","defineProperty","validInput","isNaN","parseFloat","submit","_this$state","valueOf","push","finish","render","handle","un","percent","minWidth","components_FormRow","react_dates","startDate","startDateId","endDate","endDateId","onDatesChange","onFocusChange","isOutsideRange","textAlign","components_StressSlider","body","Table","bordered","CREATED","INPROGRESS","PAUSED","FINISHED","START","STOP","PAUSE","CONTINUE","TaskController","task","forced","fsm","StateMachine","init","includes","transitions","methods","onStart","startTime","Date","getTime","onPause","timeNow","diff","pauseTime","onContinue","onStop","endTime","onForceStop","lifecycle","checkRegulatedTime","timenow","beforeStartDate","afterEndDate","DetailsPage","changeTask","operation","controller","res","nGuid","pause","continue","console","warn","t1","taskStatus","handleSubmitStress","redirect","comment","stresses","comments","match","params","id","forceStop","DetailsPage_StressCollector","submitStress","marginTop","StressCollector","justifyContent","Form","Group","Control","rows","RegisterPage","email","instructor","handleRegister","InputGroup","Append","Check","label","consent","isConsented","doConsent","undoConsent","LoginForm","handleLogin","Consent","block","LoginPage","alignItems","LoginPage_LoginForm","ConsentPage","scale","handleConsent","mgr_pdf_viewer_react_default","document","url","consentPdf","css","navigation","previousPageBtn","nextPageBtn","pages","wrapper","CollectorPage","credentials","csvs","handleCollect","c","border","react_csv","filename","csv","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","Redirect","pathname","LogoutRoute","App","HashRouter","Switch","exact","path","Boolean","hostname","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31e74323.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.329790b8.png\";","module.exports = __webpack_public_path__ + \"static/media/consent.bfc04146.pdf\";","export default {\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  setToken(token) {\n    localStorage.setItem('token', typeof token === 'string' ? token : JSON.stringify(token));\n  },\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return token && token.trim();\n  },\n  logout() {\n    localStorage.removeItem('token');\n  },\n};\n","import axios from 'axios';\nimport Auth from '../stores/auth';\n\n// const API = \"https://fsbccoffee.ngrok.io/v1\";\nconst API = 'https://cd-app-usask.herokuapp.com/v1';\n\nfunction authHeader() {\n  return { headers: { Authorization: `Bearer ${Auth.getToken()}` } };\n}\n\nfunction ApiException(message, status) {\n  this.message = message;\n  this.status = status;\n}\n\nfunction axiosError(e, defaultMessage) {\n  if (e.response && e.response.data && e.response.data.message) {\n    throw new ApiException(e.response.data.message, e.response.status);\n  }\n  throw new ApiException(defaultMessage ? defaultMessage : 'Invalid response from server');\n}\n\nexport default {\n  register: async(username, password, role) => {\n    try {\n      await axios.post(`${API}/user/register`, { username, password, role });\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  login: async(username, password) => {\n    try {\n      const { data: { token, role } } = await axios.post(`${API}/user/login`, { username, password });\n      if (!token) {\n        throw new Error('Invalid login response from server');\n      }\n      return { token, role };\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  getTaskLatest: async guid => {\n    try {\n      const result = await axios.get(`${API}/fs/${guid}/latest`, authHeader());\n      return result.data;\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  getTasks: async() => {\n    try {\n      return (await axios.get(`${API}/fs`, authHeader())).data;\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  updateTask: async(guid, nTask) => {\n    try {\n      const result = await axios.put(`${API}/fs/${guid}`, nTask, authHeader());\n      return result.data.globalUniqueID;\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  includeTask: async nTask => {\n    try {\n      await axios.post(`${API}/fs/publish`, nTask, authHeader());\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  getPublishedTasks: async() => {\n    try {\n      return (await axios.get(`${API}/fs/published`, authHeader())).data;\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n  collect: async link => {\n    try {\n      return (await axios.post(`${API}/collector`, { link })).data;\n    } catch (e) {\n      axiosError(e);\n    }\n  },\n};\n","import React from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nexport default () => (\n  <div>\n    <Navbar style={{'backgroundColor': \"#2699fb\"}}>\n      <Nav className=\"mr-auto\">\n        <LinkContainer style={{'backgroundColor': \"#2699fb\", 'fontWeight': 'bold', 'color': 'white'}} to=\"/\">\n          <Button variant=\"link\">Home</Button>\n        </LinkContainer>\n      </Nav>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <LinkContainer style={{'backgroundColor': \"#2699fb\", 'fontWeight': 'bold', 'color': 'white'}} to=\"/logout\">\n          <Button>Logout</Button>\n        </LinkContainer>\n      </Navbar.Collapse>\n    </Navbar>\n    <br />\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Spinner, Modal } from 'react-bootstrap';\n\nclass AsyncAwareContainer extends Component {\n  render() {\n    const loading = this.props.loading !== undefined && this.props.loading !== null;\n    let message = 'Loading';\n    if (typeof this.props.loading === 'string' && this.props.loading.trim().length > 0) {\n      message = this.props.loading;\n    }\n\n    return (\n      <div>\n        {\n          loading\n            ? (\n              <Modal show={loading} centered>\n                <Modal.Body>\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                    &nbsp;\n                    {' '}\n                    {message}\n                  </div>\n                </Modal.Body>\n              </Modal>\n            )\n            : React.createElement('div', null, this.props.children)\n        }\n      </div>\n    );\n  }\n}\n\nexport default AsyncAwareContainer;\n","export default {\n  propercase: text => text.split('').map((item, index) => (index === 0 ? item.toUpperCase() : item)).join(''),\n  timeout: ms => new Promise(resolve => setTimeout(resolve, ms)),\n  checkErrorForLogout: (error, router) => {\n    if (error.status === 401) {\n      alert(\"Your session has expired, please login again\");\n      router.replace(`/logout`);\n    } else {\n      alert(error.message);\n    }\n  }\n};\n","import React from 'react';\nimport { IoMdRefreshCircle } from 'react-icons/io';\nimport { Button } from 'react-bootstrap';\n\nexport default () => <Button style={{'backgroundColor': '#2699FB'}} onClick={() => window.location.reload()}>Refresh <IoMdRefreshCircle/> </Button>;\n","import React, { Component, PureComponent } from \"react\";\nimport api from \"../../Data/api\";\nimport { Container, Card, Button, Row, Col, Image, Navbar } from 'react-bootstrap';\nimport MyNavBar from '../MyNavBar';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { IoMdSettings, IoIosAddCircle, IoMdPerson } from 'react-icons/io';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport logo from \"../logo.png\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport utils from '../utils';\nimport RefreshButton from '../RefreshButton';\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nmomentDurationFormatSetup(moment);\n\nconst estimatedHours = \"Estimated hours\";\nconst duration= \"Hours that Students have spent\";\nconst estimatedStress = \"Estimated Stress\";\nconst meanStress = \"Mean Stress\";\n\nfunction millisecsToHours(mil) {\n  const toSeconds = mil / 1000;\n  const toMinutes = toSeconds / 60;\n  const toHours = toMinutes / 60;\n  return toHours;\n}\n\nclass HomePage extends Component {\n  render() {\n    return (window.FOR_INSTRUCTOR) ? <HomePageInstructor routerHistory={this.props.history} /> : <HomePageStudent routerHistory={this.props.history}/>;\n  }\n}\n\nclass HomePageInstructor extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tasks: [],\n      chartData: []\n    };\n\n    this.activeTasks = () => \n      this.state.tasks.filter(t => !t.completed)\n\n    this.completedTasks = () => \n      this.state.tasks.filter(t => t.completed)\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({loading: true});\n      const publishedTasks = await api.getPublishedTasks();\n      const tasks = publishedTasks\n        .map(tasks => {\n          const {\n            source : { data: s, guid },\n            published\n          } = tasks;\n          const { name, estimatedStress, estimatedHours } = s;\n          const duration = published.reduce((d, p) => typeof p.data.duration === 'number' ? d + p.data.duration : d , 0);\n          const submittedStress = published.filter(p => typeof p.data.stress === 'number');\n          const meanStress = submittedStress.reduce((ms, p) => ms + p.data.stress, 0) / submittedStress.length;\n          const completed = published.reduce((a, p) => p.data.status === 'finished' && a, true );\n          return {\n            guid, name, estimatedHours, estimatedStress, duration, completed, meanStress\n          };\n        });\n      // console.log(tasks);\n      const chartData = tasks.map(t => {\n        const group = {};\n        group.name = t.name;\n        group[estimatedStress] = t.estimatedStress;\n        group[duration] = millisecsToHours(t.duration);\n        group[estimatedHours] = t.estimatedHours;\n        group[meanStress] = t.meanStress;\n        return group;\n      });\n      this.setState({\n        tasks,\n        chartData\n      });\n    } catch (error) {\n      utils.checkErrorForLogout(error, this.props.routerHistory);\n    } finally {\n      if (!this.componentUnmounted)\n        this.setState({loading: undefined});\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    const BlueBreakline = () => (<hr style={{'borderTop': 'solid', 'borderColor': '#2699fb'}}/>);\n\n    // https://css-tricks.com/snippets/css/a-guide-to-flexbox\n\n    const RightSide = () => (\n      <div style={{\n        'flex': '1.3 0 0',\n        'order': '3',\n      }}>\n        <Card style={{'minHeight': '100vh'}}>\n          <Card.Header style={{\n            'backgroundColor': '#2699fb',\n            'color': 'white',\n            'padding': '2rem'\n          }} as=\"h5\">All Tasks</Card.Header>\n          <Card.Body style={{\n            'color': '#2699fb',\n            'margin': '0 1rem'\n          }}>\n            <Card.Title>Active Tasks</Card.Title>\n            <BlueBreakline />\n              {\n                this.activeTasks().map(t => (<Card.Text key={t.guid}>{t.name}</Card.Text>))\n              }\n            <Card.Title>Completed Tasks</Card.Title>\n            <BlueBreakline />\n              {\n                this.completedTasks().map(t => (<Card.Text key={t.guid}>{t.name}</Card.Text>))\n              }\n          </Card.Body>\n        </Card>\n      </div>\n    );\n\n    const TasksStatistics = () => (\n      <Container>\n        <Row>\n          <Col className='text-center' style={{'margin': '0 7rem'}}>\n            <Card style={{'backgroundColor': '#2699fb','color': 'white'}}>\n              <Card.Body><h1>{this.state.tasks.length}</h1></Card.Body>\n            </Card>\n            <h6 style={{'color': '#2699fb'}}>Total Tasks</h6>\n          </Col>\n          <Col className='text-center' style={{'margin': '0 7rem'}}>\n            <Card style={{'backgroundColor': '#2699fb','color': 'white'}}>\n              <Card.Body>\n                <h1>\n                {\n                  moment.duration(\n                    this.state.tasks\n                      .map(t => typeof t.duration === 'number' ? t.duration : 0)\n                      .reduce((total, d) => total + d, 0)\n                  ).format(\"h [hour], m [minute], s [second]\")\n                }\n                </h1>\n              </Card.Body>\n            </Card>\n            <h6 style={{'color': '#2699fb'}}>Total time spent on Task(s)</h6>\n          </Col>\n        </Row>\n      </Container>\n    );\n\n    const [kc1, kc2] = [[], []];\n    kc1[0] = [estimatedHours, '#81e383'];\n    kc1[1] = [duration, '#7e9e7f'];\n    kc2[0] = [estimatedStress, '#e38881'];\n    kc2[1] = [meanStress, '#ad534c'];\n\n    const Center = () => (\n      <div style={{\n        'flex': '7 0 0',\n        'order': '2'\n      }}>\n        <LinkContainer to=\"/tasks/include\">\n          <Button style={{'color': '#2699FB', 'width': '100%'}} size='lg' variant=\"outline-dark\">Add Tasks <IoIosAddCircle/></Button>\n        </LinkContainer>\n        <TasksStatistics />\n        <h6>Assignments</h6>\n        <TasksBarChart data={this.state.chartData} keysColors={kc1} />\n        <TasksBarChart data={this.state.chartData} keysColors={kc2} />\n      </div>\n    );\n\n    return (\n      <div>\n        <Navbar style={{'backgroundColor': \"#2699fb\"}}>\n          <Navbar.Brand><IoMdPerson /> Hello, Instructor!</Navbar.Brand>\n          <Navbar.Collapse className=\"justify-content-end\">\n            <LinkContainer style={{'backgroundColor': \"#2699fb\", 'fontWeight': 'bold', 'color': 'white'}} to=\"/logout\">\n              <Button>Logout</Button>\n            </LinkContainer>\n          </Navbar.Collapse>\n        </Navbar>\n        <div style={{\n          'display': 'flex',\n          'flexFlow': 'row wrap',\n          'minHeight': '100vh',\n          'margin': '0.5rem'\n        }}>\n            <RightSide />\n            <Center />\n        </div>\n        <Image src={logo} style={{height: '3rem'}} fluid />\n      </div>\n    );  \n  }\n}\n\nclass HomePageStudent extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tasks: [],\n    };\n\n    this.activeTasks = () => \n      this.state.tasks.filter(t => t.data.status !== 'finished')\n\n    this.completedTasks = () => \n      this.state.tasks.filter(t =>  t.data.status === 'finished')\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({loading: true});\n      const tasks = await api.getTasks();\n      this.setState({\n        tasks\n      });\n    } catch (error) {\n      utils.checkErrorForLogout(error, this.props.routerHistory);\n    } finally {\n      if (!this.componentUnmounted)\n        this.setState({loading: undefined});\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <div>\n        <MyNavBar/>\n        <RefreshButton />\n        <Container>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <h4 style={{'color': '#2699FB'}}>Active tasks</h4>\n            {\n              this.activeTasks()\n                .map(i =>\n                <div key={i.guid}>\n                  <Card style={{'backgroundColor': '#F1F8FF', 'color': '#2699FB'}}>\n                    <Card.Body>\n                      <h5> <IoMdSettings/> {i.data.name} </h5>\n                      <LinkContainer to={`/tasks/${i.guid}/details`} replace>\n                        <Button variant=\"primary\">Start Task</Button>\n                      </LinkContainer>\n                    </Card.Body>\n                  </Card>\n                  <br/>\n                </div>\n            )}\n            <h4 style={{'color': '#2699FB'}}>Completed Tasks</h4>\n            {\n              this.completedTasks()\n                .map(i =>\n                <div key={i.guid}>\n                  <Card style={{'backgroundColor': '#F1F8FF', 'color': '#2699FB'}}>\n                    <Card.Body>\n                      <LinkContainer style={{'backgroundColor': '#F1F8FF', 'color': '#2699FB'}} to={`/tasks/${i.guid}/details`} replace>\n                        <Button size=\"lg\" variant=\"light\"><IoMdSettings/> {i.data.name}</Button>\n                      </LinkContainer>\n                    </Card.Body>\n                  </Card>\n                  <br/>\n                </div>\n            )}\n          </AsyncAwareContainer>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass TasksBarChart extends PureComponent {\n  state = {\n    size: 500\n  }\n  increaseScale = () => this.setState(({ size }) => ({ size: size + 100 }))\n  decreaseScale = () => this.setState(({ size }) => ({ size: size - 100 }))\n\n  render() {\n    return (\n      <div>\n        <Button variant=\"light\" size=\"lg\" onClick={this.decreaseScale}>-</Button>\n        <Button variant=\"light\" size=\"lg\" onClick={this.increaseScale}>+</Button>\n        <BarChart\n          width={this.state.size + 500}\n          height={this.state.size}\n          data={this.props.data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          { this.props.keysColors.map(kc => <Bar dataKey={kc[0]} fill={kc[1]} />) }\n        </BarChart>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport { Col, FormControl, Row } from 'react-bootstrap';\nimport utils from './utils';\n\n// <Col xs=\"2\">{utils.propercase(this.props.name)}</Col>\n\nclass FormRow extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col>\n            <FormControl\n              placeholder={this.props.placeholder ? utils.propercase(this.props.placeholder) : ''}\n              type={this.props.type ? this.props.type : 'text'}\n              name={this.props.name}\n              onChange={this.props.onChange}\n            />\n          </Col>\n        </Row>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default FormRow;\n","import React, { Component } from \"react\";\nimport { Col } from 'react-bootstrap';\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nclass StressSlider extends Component {\n  render() {\n    return <Col xl={1}>\n      <style type=\"text/css\">\n        {`\n          .noUi-handle {\n            top: 0px;\n            border-radius: 0px;\n            border: none;\n            border-image-width: 0;\n            background: no-repeat url(\"https://img.icons8.com/officexs/16/000000/arrow.png\");\n            background-position: center;\n            background-size: 100% 125%;\n          }\n\n          .noUi-handle::after, .noUi-handle::before{\n            display: none;\n          }\n\n          .noUi-target {\n            background: linear-gradient(#d40404, #ffcfcf);\n          }\n\n          .noUi-tooltip {\n            color: #2699FB;\n          }\n        `}\n      </style>\n      <Nouislider\n        className=\"text-center\"\n        style={{'height': '100%'}}\n        start={this.props.start}\n        orientation=\"vertical\"\n        direction=\"rtl\"\n        range={{\n          min: 0,\n          max: 10\n        }}\n        step={0.1}\n        tooltips={{\n          from: Number,\n          to: v => {\n            if (0 <= v && v < 4) {\n              return \"Mild\";\n            } else if (4 <= v && v < 7) {\n              return \"Moderate\";\n            } else {\n              return \"High\";\n            }\n          }\n        }}\n        pips={{\n          mode: 'values',\n          values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n          density: 1\n        }}\n        onEnd={this.props.onEnd()}\n      />\n    </Col>;\n  }\n}\n\nexport default StressSlider;","import React, { Component } from \"react\";\nimport api from \"../../Data/api\";\nimport FormRow from '../FormRow';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Container, Button, Modal, Row, Col, Table, Card } from 'react-bootstrap';\nimport \"nouislider/distribute/nouislider.css\";\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport StressSlider from '../StressSlider';\n\nclass IncludePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      estimatedHours: \"\",\n      regulatedStartDate: null,\n      regulatedEndDate: null,\n      focusedInput: null,\n      notes: \"\",\n      estimatedStress: 5,\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.validInput = () => this.state.name.trim().length > 0 \n      && this.state.estimatedHours.trim().length > 0\n      && !isNaN(parseFloat(this.state.estimatedHours.trim()))\n      && this.state.regulatedStartDate\n      && this.state.regulatedEndDate;\n\n    this.submit = async event => {\n      try {\n        this.setState({loading: 'Including task'});\n        const { name, estimatedHours, notes, estimatedStress } = this.state;\n        await api.includeTask({ \n          name, estimatedHours: parseFloat(estimatedHours.trim()), notes, estimatedStress,\n          regulatedStartDate: this.state.regulatedStartDate.valueOf(),\n          regulatedEndDate: this.state.regulatedEndDate.valueOf()\n        });\n        this.props.history.push(\"/\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n\n    this.onEnd = () => (render, handle, value, un, percent) => {\n      this.setState({\n        estimatedStress: percent/10\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    if (window.FOR_INSTRUCTOR) {\n      return (\n        <div style={{\n          'color': '#2699FB',\n          'margin': '5% 0 0 0'\n        }}>\n          <h1 className=\"text-center\">Create a New Task</h1>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <Container style={{\n              'minWidth': '100vw',\n              'margin': '7% 0 0 0'\n            }}>\n              <Row>\n                <Col>\n                  <FormRow name=\"name\" placeholder=\"Activity Name\" onChange={this.handleChange} />\n                  <FormRow name=\"estimatedHours\" placeholder=\"Estimated Hours\" onChange={this.handleChange} />\n                  <FormRow name=\"notes\" placeholder=\"Notes\" onChange={this.handleChange} />\n                  <DateRangePicker\n                    startDate={this.state.regulatedStartDate} // momentPropTypes.momentObj or null,\n                    startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                    endDate={this.state.regulatedEndDate} // momentPropTypes.momentObj or null,\n                    endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                    onDatesChange={({ startDate, endDate }) => this.setState({ regulatedStartDate: startDate, regulatedEndDate: endDate })} // PropTypes.func.isRequired,\n                    focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                    onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                    isOutsideRange={() => false} //For testing past dates\n                  />\n                  <h6 style={{'textAlign': 'right'}}>Selected stress score: {this.state.estimatedStress}</h6>\n                </Col>\n\n\n                <StressSlider start={this.state.estimatedStress} onEnd={this.onEnd} />\n\n\n                <Col>\n                  <Card className=\"text-center\" body><b>What level of stress do you think your students may experience in completing this task?</b></Card>\n                  <br/>\n                  <h5>Interpretation of the stress scroll bar:</h5>\n                  <Table bordered style={{'color': '#2699FB'}}>\n                    <thead>\n                      <tr>\n                        <th>Score</th>\n                        <th>Meaning</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>1 - 4 = low stress</td>\n                        <td>Student may <b>not</b> be psychologically distressed</td>\n                      </tr>\n                      <tr>\n                        <td>4.1 - 7 = moderate stress</td>\n                        <td>Student may be <b>mildly</b> psychologically distressed</td>\n                      </tr>\n                      <tr>\n                        <td>7.1 - 10 = high stress</td>\n                        <td>Student may  be <b>severely</b> psychologically distressed</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </Container>\n            <br/><br/>\n            <div className=\"text-center\">\n              {\n                this.validInput() ? <Button onClick={this.submit}> Create </Button> : <Guard/>\n              }\n            </div>\n          </AsyncAwareContainer>\n        </div>\n      );\n    }\n    return (\n      <div>\n        \n      </div>\n    );\n  }\n}\n\nfunction Guard() {\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Create\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body> Do not leave name, Estimated Hours, and dates empty and make sure Estimated Hours is a number</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default IncludePage;","import React, { Component } from \"react\";\nimport api from \"../../Data/api\";\nimport MyNavBar from '../MyNavBar';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Button, Card, Table, Container, Form } from 'react-bootstrap';\nimport StateMachine from 'javascript-state-machine';\nimport StressSlider from '../StressSlider';\nimport utils from '../utils';\nimport RefreshButton from '../RefreshButton';\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nmomentDurationFormatSetup(moment);\n\nconst timeFormat = 'MMMM Do YYYY, h:mm:ss a';\n\n//states\nconst [CREATED, INPROGRESS, PAUSED, FINISHED] = ['created', 'inProgress', 'paused', 'finished'];\n// transitions\nconst [START, STOP, PAUSE, CONTINUE] = ['start', 'stop', 'pause', 'continue'];\n\nclass TaskController {\n  constructor(task, forced) {\n    this.task = task;\n\n    const allowedStatuses = s => [CREATED, INPROGRESS, PAUSED, FINISHED].includes(s);\n\n    this.fsm = new StateMachine({\n      init: allowedStatuses(task.status) ? task.status : CREATED,\n      transitions: forced ?\n      [\n        { name: 'forceStop',    from: CREATED,    to: FINISHED },\n        { name: 'forceStop',    from: INPROGRESS, to: FINISHED },\n        { name: 'forceStop',    from: PAUSED,     to: FINISHED },\n      ]\n      :\n      [\n        { name: START,    from: CREATED,    to: INPROGRESS },\n        { name: PAUSE,    from: INPROGRESS, to: PAUSED },\n        { name: CONTINUE, from: PAUSED,     to: INPROGRESS },\n        { name: STOP,     from: PAUSED,     to: FINISHED }\n      ],\n      methods: {\n        onStart() {\n          task.startTime = (new Date()).getTime();\n          task.status = this.state;\n        },\n        onPause() {\n          const timeNow = (new Date()).getTime();\n          if (!task.duration) {\n            const diff = timeNow - task.startTime;\n            task.duration = diff;\n          }\n          else {\n            const diff = timeNow - task.pauseTime;\n            task.duration += diff;\n          }\n          task.pauseTime = timeNow;\n\n          task.status = this.state;\n        },\n        onContinue() {\n          task.status = this.state;\n        },\n        onStop() {\n          const timeNow = (new Date()).getTime();\n          task.endTime = timeNow;\n          task.duration += timeNow - task.pauseTime;\n\n          task.status = this.state;\n        },\n        onForceStop(lifecycle) {\n          //after regulatedEndtime\n\n          switch (lifecycle.from) {\n            case CREATED:\n            // no startTime, no endTime\n            task.duration = 0;\n            break;\n            case INPROGRESS:\n            task.endTime = task.regulatedEndDate;\n            task.duration = task.regulatedEndDate - task.regulatedStartDate;\n            break;\n            case PAUSED:\n            // when task enters PAUSED state it should be given a duration\n            task.endTime = task.pauseTime;\n            break;\n            default:\n            alert('Error onForceStop');\n            break;\n          }\n\n          task.status = this.state;\n        }\n      }\n    });\n  }\n}\n\n// function taskIsWithinValidTimeReload(task) {\n//   const timenow = (new Date()).getTime();\n//   const beforeStartDate = timenow < task.regulatedStartDate;\n//   if (beforeStartDate) {\n//     alert(\"You cannot start before the regulated start date of the task\");\n//     window.location.reload()\n//   }\n//   const afterEndDate = task.regulatedEndDate < timenow;\n//   if (afterEndDate) {\n//     alert(\"The deadline for the task is over\");\n//     window.location.reload()\n//   }\n// }\n\nfunction checkRegulatedTime(task) {\n  const timenow = (new Date()).getTime();\n  const beforeStartDate = timenow < task.regulatedStartDate;\n  const afterEndDate = task.regulatedEndDate < timenow;\n  if (beforeStartDate) {\n    return -1;\n  }\n  if (afterEndDate) {\n    return 1;\n  }\n  return 0;\n}\n\nclass DetailsPage extends Component {\n  constructor() {\n    super();\n\n    // react seems to be slow and inconsistent when assigning an object to state,\n    // set task: null and do console.log in the jsx to see\n    this.state = {\n      guid: \"\",\n      task: {}\n    };\n\n    this.changeTask = async (operation) => {\n      try {\n        this.setState({loading: 'Updating ...'});\n        const controller = new TaskController(this.state.task);\n        let res;\n        switch(operation) {\n          case START: res = controller.fsm.start(); break;\n          case STOP: res = controller.fsm.stop(); break;\n          case PAUSE: res = controller.fsm.pause(); break;\n          case CONTINUE: res = controller.fsm.continue(); break;\n          default:\n            return console.warn(`No ${operation}`);\n        }\n\n        if (!res) {\n          return;\n        }\n\n        const nGuid = await api.updateTask(this.state.guid, controller.task);\n        this.props.history.replace(`/tasks/${nGuid}/details`);\n        // Not sure why but history replace does not update guid\n        this.setState({guid: nGuid});\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n\n    this.taskStatus = () => {\n      const state = (new TaskController(this.state.task)).fsm.state;\n\n      switch(state) {\n        case CREATED:\n          return \"You haven't started this task\";\n        case INPROGRESS:\n          return \"You're currently working on this task\";\n        case PAUSED:\n          return \"You're currently working on this task\";\n        case FINISHED:\n          return \"You've completed this task\";\n        default:\n          return \"Error\"\n      }\n    }\n\n    this.handleSubmitStress = redirect => async (stress, comment) => {\n      try {\n        this.setState({loading: 'Updating ...'});\n        const task = this.state.task;\n\n        if (!task.stresses) {\n          task.stresses = [stress]\n        } else {\n          task.stresses.push(stress);\n        }\n\n        if (!task.comments) {\n          task.comments = [comment]\n        } else {\n          task.comments.push(comment);\n        }\n\n        // stress keeps mean stress\n        task.stress = task.stresses.reduce((total, s) => s + total, 0) / task.stresses.length\n\n        const nGuid = await api.updateTask(this.state.guid, task);\n\n        if (redirect) {\n          this.props.history.replace(`/`);\n        } else {\n          this.props.history.replace(`/tasks/${nGuid}/details`);\n          // Not sure why but history replace does not update guid\n          this.setState({guid: nGuid});\n        }\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({loading: true});\n      const task = await api.getTaskLatest(this.props.match.params.id);\n      if (task.guid !== this.props.match.params.id) {\n        this.props.history.replace(`/tasks/${task.guid}/details`);\n      }\n\n      if (checkRegulatedTime(task.data) === 1 && task.data.status !== FINISHED) {\n        this.setState({loading: 'Task has reached deadline, updating ...'});\n        const controller = new TaskController(task.data, true);\n        controller.fsm.forceStop();\n        // if (res) {\n\n        // }\n        const nGuid = await api.updateTask(task.guid, controller.task);\n        this.props.history.replace(`/tasks/${nGuid}/details`);\n        // Not sure why but history replace does not update guid\n        this.setState({guid: nGuid});\n        return;\n      }\n\n      this.setState({\n      \tguid: task.guid,\n      \ttask: task.data\n      });\n    } catch (error) {\n      utils.checkErrorForLogout(error, this.props.history);\n    } finally {\n      if (!this.componentUnmounted)\n        this.setState({loading: undefined});\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    const Buttons = () => {\n      if (checkRegulatedTime(this.state.task) === -1) {\n        return <h4 style={{'color': '#2799F9', 'marginTop': '3rem'}}>You can start this task on {moment(this.state.task.regulatedStartDate).format(\"MMMM Do YYYY\")}</h4>\n      }\n\n      const transitions = (new TaskController(this.state.task)).fsm.transitions();\n      return <div>\n        <style type=\"text/css\">\n          {`\n            .btn-flat {\n              background-color: #2799F9;\n              color: white;\n            }\n\n            .btn-xxl {\n              margin: 1rem 0 0 0;\n              font-size: 3rem;\n              height: 15rem;\n              width: 15rem;\n              border-radius: 40rem;\n            }\n\n            .btn-xxs {\n              margin: 10rem 0 0 0;\n              font-size: 1rem;\n              height: 5rem;\n              width: 5rem;\n              border-radius: 10rem;\n            }\n          `}\n        </style>\n        { transitions.includes(START) && <Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(START)}>Start</Button> }\n        { transitions.includes(PAUSE) && <Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(PAUSE)}>Pause</Button> }\n        { transitions.includes(CONTINUE) && <Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(CONTINUE)}>Continue</Button> }\n        { transitions.includes(STOP) && <Button variant=\"flat\" size=\"xxs\" onClick={() => this.changeTask(STOP)}>Stop</Button> }\n        { this.state.task.status === PAUSED && <StressCollector submitStress={this.handleSubmitStress(false)} /> }\n      </div>;\n    };\n    return (\n      <div>\n        <MyNavBar/>\n          <RefreshButton />\n          <AsyncAwareContainer loading={this.state.loading}>\n          \t<Container className=\"text-center\">\n          \t{\n          \t\t(this.state.task.status === 'finished') ?\n\n          \t\t(<div>\n\t\t\t\t\t      <Card style={{'backgroundColor': '#2799F9', 'color': 'white'}}>\n          \t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t  <h4>Task {this.state.task.name} completed, time spent: {moment.duration(this.state.task.duration).format(\"m [minute]\")}</h4>\n                    <Table bordered style={{'color': 'white'}}>\n                      <thead>\n                        <tr>\n                          <th>Score</th>\n                          <th>Meaning</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>1 - 4 = low stress</td>\n                          <td>You are likely <b>not</b> psychologically distressed</td>\n                        </tr>\n                        <tr>\n                          <td>4.1 - 7 = moderate stress</td>\n                          <td>You are likely <b>mildly</b> psychologically distressed</td>\n                        </tr>\n                        <tr>\n                          <td>7.1 - 10 = high stress</td>\n                          <td>You are likely to be <b>severely</b> psychologically distressed</td>\n                        </tr>\n                      </tbody>\n                    </Table>\n\t\t\t\t\t\t\t\t  </Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t  <br/><br/>\n          \t\t\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t(typeof this.state.task.stress === 'number') ?\n\t\t\t\t\t\t\t\t\t<h6 style={{'color': '#2699FB'}}>Submitted stress level: {this.state.task.stress}</h6>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<StressCollector submitStress={this.handleSubmitStress(true)} />\n\t\t\t\t\t\t\t\t}\n          \t\t</div>)\n\n          \t\t:\n\n\t          \t(<div>\n\t          \t\t<Card style={{'backgroundColor': '#2799F9', 'color': 'white'}}>\n\t          \t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t  <h2>{this.state.task.name}</h2>\n\t\t\t\t\t\t\t\t\t  <br/><br/>\n\t\t\t\t\t\t\t\t\t  <h6>{this.taskStatus()}</h6>\n\t\t\t\t\t\t\t\t\t  <br/><br/><br/>\n\t\t\t\t\t\t\t\t\t  <h5>Task Details</h5>\n\t\t\t\t\t\t\t\t\t  <h6>Start Date: {this.state.task.startTime ? moment(this.state.task.startTime).format(timeFormat) : ''} | End Date: {this.state.task.endTime ? moment(this.state.task.endTime).format(timeFormat) : ''}</h6>\n\t\t\t\t\t\t\t\t  </Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n                <Buttons />\n\t\t\t\t\t\t\t</div>)\n\t          }\n\t\t\t\t\t\t</Container>\n          </AsyncAwareContainer>\n      </div>\n    );\n  }\n}\n\nclass StressCollector extends Component {\n\tstate = {\n    value: 5,\n    comments: \"\"\n  };\n\n  onEnd = () => (render, handle, value, un, percent) => {\n    this.setState({\n    \tvalue: percent/10\n    });\n  };\n\n  render() {\n    return (\n    \t<div>\n    \t\t<h6 style={{'color': '#2699FB'}}>Drag the scroll bar up to indicate how stressful you felt in completing this activity</h6>\n    \t\t<div style={{\n    \t\t\tmargin: '2rem',\n    \t\t\tdisplay: 'flex',\n\t\t\t\t  justifyContent: 'center',\n          'height': '35rem'\n\t\t\t\t}}>\n          <StressSlider start={this.state.value} onEnd={this.onEnd} />\n\t      </div>\n        <Form.Group>\n          <Form.Control\n            placeholder='Do you have any comments? Were you able to time the duration of the task accurately? If no - please indicate the approximate duration that was recorded, but not spent on task (e.g. you forgot to \"pause\", while embarking on another activity unconnected to the task)'\n            onChange={e => this.setState({comments: e.target.value})}\n            as=\"textarea\"\n            rows=\"4\"\n          />\n        </Form.Group>\n\t      <Button style={{'backgroundColor': '#2799F9'}} onClick={() => this.props.submitStress(this.state.value, this.state.comments)}>Submit</Button>\n      </div>\n    );\n  }\n}\n\nexport default DetailsPage;","import React from \"react\";\nimport Auth from \"../../stores/auth\";\nimport api from \"../../Data/api\";\nimport FormRow from '../FormRow';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Button, Container, Form, InputGroup, FormControl } from \"react-bootstrap\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (Auth.loggedIn()) {\n      this.props.history.replace(\"/\");\n    }\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      instructor: false\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleRegister = async event => {\n      try {\n        this.setState({loading: 'Registering'});\n        await api.register(`${this.state.email}@usask.ca`, this.state.password, this.state.instructor ? 'INSTRUCTOR' : 'student');\n\n        this.setState({loading: 'Logging in'});\n        const { token, role } = await api.login(`${this.state.email}@usask.ca`, this.state.password);\n        if (window.FOR_INSTRUCTOR && role !== 'INSTRUCTOR') {\n          alert(\"Successfully registered but you are not an instructor, please use the app for students instead\");\n          return;  \n        } else if (!window.FOR_INSTRUCTOR && role === 'INSTRUCTOR') {\n          alert(\"Successfully registered but you are not a student, please use the app for the instructor instead\");\n          return;  \n        }\n        Auth.setToken(token);\n        this.props.history.replace(\"/\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <h1>Register</h1>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                name=\"email\"\n                placeholder=\"User ID\"\n                onChange={this.handleChange}\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>@usask.ca</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n            <FormRow name=\"password\" placeholder=\"password\" type=\"password\" onChange={this.handleChange} />\n            <Form.Check\n              name=\"instructor\"\n              label=\"I'm an instructor\"\n              onChange={() => this.setState({instructor: !this.state.instructor})}\n            />\n            <br />\n            <Button onClick={this.handleRegister}>Register</Button>\n          </AsyncAwareContainer>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPage;","export default {\n  isConsented() {\n    return localStorage.getItem('consent') === '1';\n  },\n  doConsent() {\n    localStorage.setItem('consent', '1');\n  },\n  undoConsent() {\n    localStorage.removeItem('consent');\n  },\n};\n","import React from \"react\";\nimport Auth from \"../../stores/auth\";\nimport Consent from \"../../stores/consent\";\nimport api from \"../../Data/api\";\nimport logo from \"../logo.png\";\nimport FormRow from '../FormRow';\nimport { Button, Container, Image, Row, Col, FormControl, InputGroup } from \"react-bootstrap\";\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { IoMdArrowRoundForward } from 'react-icons/io';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (Auth.loggedIn()) {\n      this.props.routerHistory.replace(\"/\");\n    }\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleLogin = async event => {\n      try {\n        this.setState({loading: 'Logging in'});\n        const { token, role } = await api.login(`${this.state.email}@usask.ca`, this.state.password);\n        if (window.FOR_INSTRUCTOR && role !== 'INSTRUCTOR') {\n          alert(\"You are not an instructor, please use the app for students instead\");\n          return;  \n        } else if (!window.FOR_INSTRUCTOR && role === 'INSTRUCTOR') {\n          alert(\"You are not a student, please use the app for the instructor instead\");\n          return;  \n        }\n        Auth.setToken(token);\n        this.props.routerHistory.replace(\"/\");\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    if(Consent.isConsented()) {\n      return <AsyncAwareContainer loading={this.state.loading}>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            name=\"email\"\n            placeholder=\"User ID\"\n            onChange={this.handleChange}\n          />\n          <InputGroup.Append>\n            <InputGroup.Text>@usask.ca</InputGroup.Text>\n          </InputGroup.Append>\n        </InputGroup>\n        <FormRow name=\"password\" placeholder=\"Password\" type=\"password\" onChange={this.handleChange} />\n        <Button size='sm' onClick={this.handleLogin} block><IoMdArrowRoundForward/></Button>\n      </AsyncAwareContainer>\n    }\n    return <div>\n      <p style={{color: '#2699FB'}}> To start using this app, you must first give your consent to participate in the study: Impact of curriculum overload on students' mental health using the Curriculum Densitometer </p>\n      <LinkContainer to={`/consent`} replace>\n        <Button variant=\"primary\">\n          Give consent\n        </Button>\n      </LinkContainer>\n    </div>;    \n  }\n}\n\nclass LoginPage extends React.Component {\n  render() {\n    if (window.FOR_INSTRUCTOR) {\n      return (\n        <div>\n          <Container style={{'margin': '1rem'}}>\n            <Row style={{\n              'minHeight': '100vh',\n              'minWidth': '98vw'\n            }}>\n              <Col style={{\n                'backgroundColor': '#2699fb',\n                'display': 'flex',\n                'alignItems': 'center',\n                'justifyContent': 'center',\n                'color': 'white'\n              }}>\n                <div style={{width: '20rem'}}>\n                  <h5>Welcome to CD</h5>\n                  <hr style={{'borderTop': 'solid'}}/>\n                  <h6 style={{'fontWeight': 'lighter'}}>\n                    Welcome to the CD app for instructors. Login and to access\n                  </h6>\n                  <br/>\n                  <Button style={{\n                    'borderColor': 'white',\n                    'fontWeight': 'bold',\n                    'color': 'white'\n                  }} variant=\"outline-dark\">Learn more</Button>\n                </div>\n              </Col>\n              <Col style={{\n                'margin': '20% 0 20% 0',\n                'color': '#2699FB'\n              }}>\n                <Image src={logo} style={{width: '10rem'}} fluid />\n                <h4 className=\"text-center\">Sign in</h4>\n                <LoginForm routerHistory={this.props.history} />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Container className=\"text-center\">\n          <Image src={logo} style={{margin: '5rem', width: '15rem'}} fluid />\n          <LoginForm routerHistory={this.props.history} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;","import React from \"react\";\nimport Consent from \"../../stores/consent\";\nimport { Button } from \"react-bootstrap\";\nimport consentPdf from \"../consent.pdf\";\nimport PDFViewer from \"mgr-pdf-viewer-react\";\nimport utils from '../utils';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\n\nclass ConsentPage extends React.Component {\n  state = {\n    scale: 1\n  }\n  increaseScale = () => this.setState(({ scale }) => ({ scale: scale + 0.2 }))\n  decreaseScale = () => this.setState(({ scale }) => ({ scale: scale - 0.2 }))\n\n  handleConsent = async event => {\n    try {\n      this.setState({loading: 'Thank you, redirecting to login'});\n      await utils.timeout(1000);\n      Consent.doConsent();\n      this.props.history.replace(\"/login\");\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      if (!this.componentUnmounted)\n        this.setState({loading: undefined});\n    }\n  }\n\n  render() {\n    return (\n      <AsyncAwareContainer loading={this.state.loading}>\n        <style type=\"text/css\">\n          {`\n            .customViewer {\n              margin: 0;\n              padding: 0;\n              width: 30rem;\n              text-align: left;\n            }\n            .customViewer > div:nth-child(1) {\n              margin: 0;\n              padding: 0;\n              width: 30rem;\n            }\n            .customPrevBtn {\n              cursor: pointer;\n              display: inline-block;\n              margin: 0;\n              width: 3rem;\n              color: white;\n              background-color: black;\n              border-width: 0.1rem;\n              border-style: solid;\n              border-radius: 0.5rem;\n            }\n            .customNextBtn {\n              cursor: pointer;\n              display: inline-block;\n              margin: 0;\n              width: 3rem;\n              color: white;\n              background-color: black;\n              border-width: 0.1rem;\n              border-style: solid;\n              border-radius: 0.5rem;\n            }\n            .customPages {\n              display: inline-block;\n              width: 15rem;\n            }\n            .customWrapper {\n              height: 3rem;\n              font-size: 1.2rem;\n              background-color: #fff;\n            }\n          `}\n        </style>\n        <Button variant=\"light\" onClick={this.decreaseScale}>-</Button>\n        <span>Scale: {this.state.scale}</span>\n        <Button variant=\"light\" onClick={this.increaseScale}>+</Button>\n        <PDFViewer\n          document={{url: consentPdf}}\n          css=\"customViewer\"\n          scale={this.state.scale}\n          navigation={{\n            css: {\n              previousPageBtn: 'customPrevBtn',\n              nextPageBtn: 'customNextBtn',\n              pages: 'customPages',\n              wrapper: 'customWrapper'\n            }\n          }}\n        />\n        <div style={{\n          margin: '2rem',\n          display: 'flex',\n          justifyContent: 'center'\n        }}>\n          <Button size=\"lg\" className=\"text-center\" variant=\"primary\" onClick={this.handleConsent}>\n            Give consent\n          </Button>\n        </div>\n      </AsyncAwareContainer>\n    );\n  }\n}\n\nexport default ConsentPage;","import React from \"react\";\nimport api from \"../../Data/api\";\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Button, Container, Card, FormControl } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\nclass CollectorPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      credentials: \"\",\n      csvs: []\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleCollect = async event => {\n      try {\n        this.setState({loading: 'Collecting'});\n        const csvs = await api.collect(this.state.credentials);\n        this.setState({ csvs });\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <div>\n        <Container className=\"text-center\">\n          <h1>Collector</h1>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <FormControl\n              placeholder=\"Credentials\"\n              name=\"credentials\"\n              onChange={this.handleChange}\n            />\n            <br/>\n            <Button onClick={this.handleCollect}>Collect</Button>\n            {\n              this.state.csvs.map(c =>\n                <Card key={c.name} border=\"success\" style={{ margin: '2rem 8rem' }}>\n                  <Card.Body>\n                    <Card.Title>{c.name}</Card.Title>\n                    <CSVLink filename={`${c.name}.csv`} data={c.csv}>Download</CSVLink>\n                  </Card.Body>\n                </Card>\n              )\n            }\n          </AsyncAwareContainer>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default CollectorPage;","import React from \"react\";\nimport { HashRouter, Switch, Redirect, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage/HomePage\"\nimport IncludePage from \"./components/IncludePage/IncludePage\"\nimport DetailsPage from \"./components/DetailsPage/DetailsPage\"\nimport RegisterPage from \"./components/RegisterPage/RegisterPage\"\nimport LoginPage from \"./components/LoginPage/LoginPage\"\nimport ConsentPage from \"./components/ConsentPage/ConsentPage\"\nimport CollectorPage from \"./components/CollectorPage/CollectorPage\"\nimport Auth from \"./stores/auth\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        Auth.loggedIn() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction LogoutRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        {\n          Auth.logout();\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n      }\n    />\n  );\n}\n\n// Followed https://github.com/gothinkster/react-mobx-realworld-example-app\n// To adopt mobx faster later on\nexport default class App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/consent\" component={ConsentPage} />\n          <Route exact path=\"/collect\" component={CollectorPage} />\n          <LogoutRoute exact path=\"/logout\" />\n          <PrivateRoute exact path=\"/\" component={HomePage} />\n          <PrivateRoute exact path=\"/tasks/include\" component={IncludePage} />\n          <PrivateRoute exact path=\"/tasks/:id/details\" component={DetailsPage} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}