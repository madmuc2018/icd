{"version":3,"sources":["components/logo.png","components/consent.pdf","stores/auth.js","Data/api.js","components/MyNavBar.js","components/AsyncAwareContainer.js","components/HomePage/HomePage.js","components/utils.js","components/FormRow.js","components/IncludePage/IncludePage.js","components/DetailsPage/DetailsPage.js","components/MyAuthNavBar.js","components/RegisterPage/RegisterPage.js","stores/consent.js","components/LoginPage/LoginPage.js","components/ConsentPage/ConsentPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","auth","getToken","localStorage","getItem","setToken","token","setItem","JSON","stringify","loggedIn","trim","logout","removeItem","API","authHeader","headers","Authorization","concat","Auth","api","register","_register","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","role","wrap","_context","prev","next","axios","post","stop","_x","_x2","_x3","apply","this","arguments","login","_login","_callee2","_ref","_context2","sent","data","Error","abrupt","_x4","_x5","getTaskLatest","_getTaskLatest","_callee3","guid","result","_context3","get","_x6","getTasks","_getTasks","_callee4","_context4","updateTask","_updateTask","_callee5","nTask","_context5","put","globalUniqueID","_x7","_x8","includeTask","_includeTask","_callee6","_context6","_x9","MyNavBar","react_default","createElement","Navbar","bg","variant","Nav","className","lib","to","Button","AsyncAwareContainer","loading","undefined","props","message","length","Modal","show","centered","Body","Spinner","animation","React","children","Component","TasksBarChart","state","size","increaseScale","_this","setState","decreaseScale","_ref2","onClick","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","PureComponent","HomePage","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tasks","chartData","activeTasks","filter","t","startTime","endTime","completedTasks","taskDuration","task","toMinutes","duration","Math","round","map","name","Stress","stress","Minutes","_this3","alert","t0","componentUnmounted","_this4","window","FOR_INSTRUCTOR","BlueBreakline","style","borderTop","borderColor","TasksStatistics","Container","Row","Col","Card","backgroundColor","color","reduce","total","d","Brand","index_esm","Collapse","fontWeight","display","flexFlow","minHeight","flex","order","padding","textAlign","lineHeight","Header","as","Title","Text","key","HomePage_TasksBarChart","Image","src","logo","fluid","components_AsyncAwareContainer","i","replace","utils","text","split","item","index","toUpperCase","join","FormRow","FormControl","placeholder","type","onChange","Guard","_React$useState","useState","_React$useState2","slicedToArray","setShow","handleClose","onHide","Footer","IncludePage","estimatedHours","regulatedStartDate","regulatedEndDate","focusedInput","notes","estimatedStress","handleChange","event","_event$target","target","value","defineProperty","validInput","submit","_this$state","valueOf","history","push","finish","onEnd","render","handle","un","percent","minWidth","components_FormRow","react_dates","startDate","startDateId","endDate","endDateId","onDatesChange","onFocusChange","xl","nouislider_react_umd_production_min_default","start","orientation","direction","range","min","max","step","pips","mode","values","density","body","Table","bordered","START","END","PAUSE","CONTINUE","DetailsPage","changeTask","operation","timeNow","diff","_diff","_diff2","_diff3","nGuid","Date","getTime","console","warn","paused","pauseTime","t1","taskStatus","rounded","handleSubmitStress","match","params","id","DetailsPage_StressCollector","submitStress","moment","format","StressCollector","justifyContent","MyAuthNavBar","RegisterPage","email","handleRegister","t2","consent","isConsented","doConsent","undoConsent","LoginPage","handleLogin","alignItems","Consent","block","ConsentPage","scale","handleConsent","mgr_pdf_viewer_react_default","document","url","consentPdf","css","navigation","previousPageBtn","nextPageBtn","pages","wrapper","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","Redirect","pathname","from","location","LogoutRoute","App","HashRouter","Switch","exact","path","Boolean","hostname","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46352749.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.329790b8.png\";","module.exports = __webpack_public_path__ + \"static/media/consent.bfc04146.pdf\";","export default {\n  getToken() {\n    return localStorage.getItem('token');\n  },\n  setToken(token) {\n    localStorage.setItem('token', typeof token === 'string' ? token : JSON.stringify(token));\n  },\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return token && token.trim();\n  },\n  logout() {\n    localStorage.removeItem('token');\n  },\n};\n","import axios from 'axios';\nimport Auth from '../stores/auth';\n\n// const API = \"https://fsbccoffee.ngrok.io/v1\";\nconst API = 'https://cd-app-usask.herokuapp.com/v1';\n\nfunction authHeader() {\n  return { headers: { Authorization: `Bearer ${Auth.getToken()}` } };\n}\n\nexport default {\n  register: async(username, password, role) => {\n    await axios.post(`${API}/user/register`, { username, password, role });\n  },\n  login: async(username, password) => {\n    const { data: { token } } = await axios.post(`${API}/user/login`, { username, password });\n    if (!token) {\n      throw new Error('Invalid login response from server');\n    }\n    return token;\n  },\n  getTaskLatest: async guid => {\n    const result = await axios.get(`${API}/fs/${guid}/latest`, authHeader());\n    return result.data;\n  },\n  getTasks: async() => (await axios.get(`${API}/fs`, authHeader())).data,\n  updateTask: async(guid, nTask) => {\n    const result = await axios.put(`${API}/fs/${guid}`, nTask, authHeader());\n    return result.data.globalUniqueID;\n  },\n  includeTask: async nTask => {\n    await axios.post(`${API}/fs`, nTask, authHeader());\n  }\n};\n","import React from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nexport default () => (\n  <div>\n    <Navbar bg=\"light\" variant=\"dark\">\n      <Nav className=\"mr-auto\">\n        <LinkContainer to=\"/\">\n          <Button variant=\"link\">Home</Button>\n        </LinkContainer>\n        <LinkContainer to=\"/tasks/include\">\n          <Button variant=\"link\">Include</Button>\n        </LinkContainer>\n        <LinkContainer to=\"/logout\">\n          <Button variant=\"link\">Logout</Button>\n        </LinkContainer>\n      </Nav>\n    </Navbar>\n    <br />\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Spinner, Modal } from 'react-bootstrap';\n\nclass AsyncAwareContainer extends Component {\n  render() {\n    const loading = this.props.loading !== undefined && this.props.loading !== null;\n    let message = 'Loading';\n    if (typeof this.props.loading === 'string' && this.props.loading.trim().length > 0) {\n      message = this.props.loading;\n    }\n\n    return (\n      <div>\n        {\n          loading\n            ? (\n              <Modal show={loading} centered>\n                <Modal.Body>\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                    &nbsp;\n                    {' '}\n                    {message}\n                  </div>\n                </Modal.Body>\n              </Modal>\n            )\n            : React.createElement('div', null, this.props.children)\n        }\n      </div>\n    );\n  }\n}\n\nexport default AsyncAwareContainer;\n","import React, { Component, PureComponent } from \"react\";\nimport api from \"../../Data/api\";\nimport { Container, Card, Button, Row, Col, Image, Navbar } from 'react-bootstrap';\nimport MyNavBar from '../MyNavBar';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { IoMdSettings, IoIosAddCircle, IoMdPerson } from 'react-icons/io';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport logo from \"../logo.png\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nclass TasksBarChart extends PureComponent {\n  state = {\n    size: 500\n  }\n  increaseScale = () => this.setState(({ size }) => ({ size: size + 100 }))\n  decreaseScale = () => this.setState(({ size }) => ({ size: size - 100 }))\n\n  render() {\n    return (\n      <div>\n        <Button variant=\"light\" size=\"lg\" onClick={this.decreaseScale}>-</Button>\n        <Button variant=\"light\" size=\"lg\" onClick={this.increaseScale}>+</Button>\n        <BarChart\n          width={this.state.size + 500}\n          height={this.state.size}\n          data={this.props.data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"Minutes\" fill=\"green\" />\n          <Bar dataKey=\"Stress\" fill=\"red\" />\n        </BarChart>\n      </div>\n    );\n  }\n}\n\nclass HomePage extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tasks: [],\n      chartData: []\n    };\n\n    this.activeTasks = () => \n      this.state.tasks.filter(t => !(t.data.startTime && t.data.endTime))\n\n    this.completedTasks = () => \n      this.state.tasks.filter(t => t.data.startTime && t.data.endTime)\n\n    this.taskDuration = task => {\n      const toSeconds = task.duration / 1000;\n      const toMinutes = toSeconds / 60;\n      const rounded = Math.round(toMinutes * 100) / 100;\n      return rounded;\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({loading: true});\n      const tasks = await api.getTasks();\n      // console.log(tasks);\n      const chartData = tasks.map(t => ({\n        name: t.data.name, Stress: t.data.stress,\n        Minutes: typeof t.data.duration === 'number' ? this.taskDuration(t.data) : \"\"\n      }));\n      this.setState({\n        tasks,\n        chartData\n      });\n    } catch (error) {\n      alert(error);\n    } finally {\n      if (!this.componentUnmounted)\n        this.setState({loading: undefined});\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    if (window.FOR_INSTRUCTOR) {\n      const BlueBreakline = () => (<hr style={{'borderTop': 'solid', 'borderColor': '#2699fb'}}/>);\n\n      // https://css-tricks.com/snippets/css/a-guide-to-flexbox\n    \n      const LeftSide = () => (\n        <div style={{\n          'flex': '1 0 0',\n          'order': '1'\n        }}>\n          <LinkContainer to=\"/tasks/include\">\n            <Button style={{'color': '#2699FB', 'width': '100%'}} size='lg' variant=\"outline-dark\">Add Tasks <IoIosAddCircle/></Button>\n          </LinkContainer>\n          <div style={{\n            'margin': '2rem 0 0 0',\n            'padding': '1rem',\n            'minHeight': '100vh',\n            'backgroundColor': '#d1eafd'\n          }}>\n            <h5>Course Load Status</h5>\n            <BlueBreakline />\n            <h6 style={{'fontWeight': 'lighter', 'textAlign': 'center', 'lineHeight': '3'}}>\n              Tip!\n              <br />\n              You may want to consider revising the curriculum based on the statistics\n            </h6>\n          </div>\n        </div>\n      );\n\n      const RightSide = () => (\n        <div style={{\n          'flex': '1.3 0 0',\n          'order': '3',\n        }}>\n          <Card style={{'minHeight': '100vh'}}>\n            <Card.Header style={{\n              'backgroundColor': '#2699fb',\n              'color': 'white',\n              'padding': '2rem'\n            }} as=\"h5\">All Tasks</Card.Header>\n            <Card.Body style={{\n              'color': '#2699fb',\n              'margin': '0 1rem'\n            }}>\n              <Card.Title>Active Tasks</Card.Title>\n              <BlueBreakline />\n                {\n                  this.activeTasks().map(t => (<Card.Text key={t.guid}>{t.data.name}</Card.Text>))\n                }\n              <Card.Title>Completed Tasks</Card.Title>\n              <BlueBreakline />\n                {\n                  this.completedTasks().map(t => (<Card.Text key={t.guid}>{t.data.name}</Card.Text>))\n                }\n            </Card.Body>\n          </Card>\n        </div>\n      );\n\n      const TasksStatistics = () => (\n        <Container>\n          <Row>\n            <Col className='text-center' style={{'margin': '0 7rem'}}>\n              <Card style={{'backgroundColor': '#2699fb','color': 'white'}}>\n                <Card.Body><h1>{this.state.tasks.length}</h1></Card.Body>\n              </Card>\n              <h6 style={{'color': '#2699fb'}}>Total Tasks</h6>\n            </Col>\n            <Col className='text-center' style={{'margin': '0 7rem'}}>\n              <Card style={{'backgroundColor': '#2699fb','color': 'white'}}>\n                <Card.Body>\n                  <h1>\n                  {\n                    this.completedTasks()\n                      .map(t => this.taskDuration(t.data))\n                      .reduce((total, d) => total + d, 0)\n                  }\n                  </h1>\n                </Card.Body>\n              </Card>\n              <h6 style={{'color': '#2699fb'}}>Total Minutes</h6>\n            </Col>\n          </Row>\n        </Container>\n      );\n\n      const Center = () => (\n        <div style={{\n          'flex': '7 0 0',\n          'order': '2'\n        }}>\n          <TasksStatistics />\n          <h6>Assignments</h6>\n          <TasksBarChart data={this.state.chartData} />\n        </div>\n      );\n\n      return (\n        <div>\n          <Navbar style={{'backgroundColor': \"#2699fb\"}}>\n            <Navbar.Brand><IoMdPerson /> Hello, Instructor!</Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              <LinkContainer style={{'backgroundColor': \"#2699fb\", 'fontWeight': 'bold', 'color': 'white'}} to=\"/logout\">\n                <Button>Logout</Button>\n              </LinkContainer>\n            </Navbar.Collapse>\n          </Navbar>\n          <div style={{\n            'display': 'flex',\n            'flexFlow': 'row wrap',\n            'minHeight': '100vh',\n            'margin': '0.5rem'\n          }}>\n              <LeftSide />\n              <RightSide />\n              <Center />\n          </div>\n          <Image src={logo} style={{height: '3rem'}} fluid />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <MyNavBar/>\n        <Container>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <h4 style={{'color': '#2699FB'}}>Active tasks</h4>\n            {\n              this.activeTasks()\n                .map(i =>\n                <div key={i.guid}>\n                  <Card style={{'backgroundColor': '#F1F8FF', 'color': '#2699FB'}}>\n                    <Card.Body>\n                      <h5> <IoMdSettings/> {i.data.name} </h5>\n                      <LinkContainer to={`/tasks/${i.guid}/details`} replace>\n                        <Button variant=\"primary\">Start Task</Button>\n                      </LinkContainer>\n                    </Card.Body>\n                  </Card>\n                  <br/>\n                </div>\n            )}\n            <h4 style={{'color': '#2699FB'}}>Completed Tasks</h4>\n            {\n              this.completedTasks()\n                .map(i =>\n                <div key={i.guid}>\n                  <Card style={{'backgroundColor': '#F1F8FF', 'color': '#2699FB'}}>\n                    <Card.Body>\n                      <LinkContainer style={{'backgroundColor': '#F1F8FF', 'color': '#2699FB'}} to={`/tasks/${i.guid}/details`} replace>\n                        <Button size=\"lg\" variant=\"light\"><IoMdSettings/> {i.data.name}</Button>\n                      </LinkContainer>\n                    </Card.Body>\n                  </Card>\n                  <br/>\n                </div>\n            )}\n          </AsyncAwareContainer>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;","export default {\n  propercase: text => text.split('').map((item, index) => (index === 0 ? item.toUpperCase() : item)).join(''),\n};\n","import React, { Component } from 'react';\nimport { Col, FormControl, Row } from 'react-bootstrap';\nimport utils from './utils';\n\n// <Col xs=\"2\">{utils.propercase(this.props.name)}</Col>\n\nclass FormRow extends Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col>\n            <FormControl\n              placeholder={this.props.placeholder ? utils.propercase(this.props.placeholder) : ''}\n              type={this.props.type ? this.props.type : 'text'}\n              name={this.props.name}\n              onChange={this.props.onChange}\n            />\n          </Col>\n        </Row>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default FormRow;\n","import React, { Component } from \"react\";\nimport api from \"../../Data/api\";\nimport FormRow from '../FormRow';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Container, Button, Modal, Row, Col, Table, Card } from 'react-bootstrap';\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass IncludePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      estimatedHours: \"\",\n      regulatedStartDate: null,\n      regulatedEndDate: null,\n      focusedInput: null,\n      notes: \"\",\n      estimatedStress: 5,\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.validInput = () => this.state.name.trim().length > 0 \n      && this.state.estimatedHours.trim().length > 0\n      && this.state.regulatedStartDate\n      && this.state.regulatedEndDate;\n\n    this.submit = async event => {\n      try {\n        this.setState({loading: 'Including task'});\n        const { name, estimatedHours, notes, estimatedStress } = this.state;\n        await api.includeTask({ \n          name, estimatedHours, notes, estimatedStress,\n          regulatedStartDate: this.state.regulatedStartDate.valueOf(),\n          regulatedEndDate: this.state.regulatedEndDate.valueOf()\n        });\n        this.props.history.push(\"/\");\n      } catch (error) {\n        alert(error);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n\n    this.onEnd = () => (render, handle, value, un, percent) => {\n      this.setState({\n        estimatedStress: percent/10\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    if (window.FOR_INSTRUCTOR) {\n      return (\n        <div style={{'color': '#2699FB'}}>\n          <h1 className=\"text-center\">Create a New Task</h1>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <Container style={{\n              'minWidth': '100vw',\n              'margin': '3% 0 0 0'\n            }}>\n              <Row>\n                <Col>\n                  <FormRow name=\"name\" placeholder=\"Activity Name\" onChange={this.handleChange} />\n                  <FormRow name=\"estimatedHours\" placeholder=\"Estimated Hours\" onChange={this.handleChange} />\n                  <FormRow name=\"notes\" placeholder=\"Notes\" onChange={this.handleChange} />\n                  <DateRangePicker\n                    startDate={this.state.regulatedStartDate} // momentPropTypes.momentObj or null,\n                    startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n                    endDate={this.state.regulatedEndDate} // momentPropTypes.momentObj or null,\n                    endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n                    onDatesChange={({ startDate, endDate }) => this.setState({ regulatedStartDate: startDate, regulatedEndDate: endDate })} // PropTypes.func.isRequired,\n                    focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                    onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                  />\n                </Col>\n\n                <Col xl={1}>\n                  <Nouislider\n                    className=\"text-center\"\n                    style={{'height': '100%'}}\n                    start={this.state.estimatedStress}\n                    orientation=\"vertical\"\n                    direction=\"rtl\"\n                    range={{\n                      min: 0,\n                      max: 10\n                    }}\n                    step={0.1}\n                    pips={{\n                      mode: 'values',\n                      values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n                      density: 1\n                    }}\n                    onEnd={this.onEnd()}\n                  />\n                </Col>\n\n                <Col>\n                  <Card className=\"text-center\" body>What level of stress do you think your students may experience in completing this task?</Card>\n                  <br/>\n                  <h5>Interpretation of the stress scroll bar:</h5>\n                  <Table bordered style={{'color': '#2699FB'}}>\n                    <thead>\n                      <tr>\n                        <th>Score</th>\n                        <th>Meaning</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>1 - 4 = low stress</td>\n                        <td>Student are likely not psychologically distressed</td>\n                      </tr>\n                      <tr>\n                        <td>4.1 - 7 = moderate stress</td>\n                        <td>Student are likely mildly psychologically distressed</td>\n                      </tr>\n                      <tr>\n                        <td>7.1 - 10 = high stress</td>\n                        <td>Student are likely to be severely psychologically distressed</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n            </Container>\n            <br/><br/>\n            <div className=\"text-center\">\n              {\n                this.validInput() ? <Button onClick={this.submit}> Create </Button> : <Guard/>\n              }\n            </div>\n          </AsyncAwareContainer>\n        </div>\n      );\n    }\n    return (\n      <div>\n        \n      </div>\n    );\n  }\n}\n\nfunction Guard() {\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <div>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Create\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Body> Do not leave name, Estimated Hours, and dates empty </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default IncludePage;","import React, { Component } from \"react\";\nimport api from \"../../Data/api\";\nimport MyNavBar from '../MyNavBar';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Button, Card, Table, Container } from 'react-bootstrap';\nimport moment from 'moment';\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nconst timeFormat = 'MMMM Do YYYY, h:mm:ss a';\nconst [START, END, PAUSE, CONTINUE] = [\"START\", \"END\", \"PAUSE\", \"CONTINUE\"];\n\nclass DetailsPage extends Component {\n  constructor() {\n    super();\n\n    // react seems to be slow and inconsistent when assigning an object to state,\n    // set task: null and do console.log in the jsx to see\n    this.state = {\n      guid: \"\",\n      task: {}\n    };\n\n    this.changeTask = async (operation) => {\n      try {\n        this.setState({loading: 'Updating ...'});\n        const task = this.state.task;\n        const timeNow = (new Date()).getTime();\n\n        switch(operation) {\n          case START:\n            if (task.startTime)\n              return console.warn(\"Already started\")\n            task.startTime = timeNow;\n            break;\n          case END:\n            if (task.endTime)\n              return console.warn(\"Already end\");\n            task.endTime = timeNow;\n            if (!task.duration) {\n              const diff = timeNow - task.startTime;\n              task.duration = diff;\n            }\n            else {\n              if (!task.paused) {\n                const diff = timeNow - task.pauseTime;\n                task.duration += diff;\n              }\n            }\n            break;\n          case PAUSE:\n            if (task.paused)\n              return console.warn(\"Already paused\");\n            task.paused = true;\n            if (!task.duration) {\n              const diff = timeNow - task.startTime;\n              task.duration = diff;\n            }\n            else {\n              const diff = timeNow - task.pauseTime;\n              task.duration += diff;\n            }\n            task.pauseTime = timeNow;\n            break;\n          case CONTINUE:\n            if (!task.startTime)\n              return console.warn(\"Has not started\");\n            if (!task.paused)\n              return console.warn(\"Already continued\");\n            task.paused = false;\n            break;\n          default:\n            return console.warn(`No ${operation}`);\n        }\n\n        const nGuid = await api.updateTask(this.state.guid, task);\n        this.props.history.replace(`/tasks/${nGuid}/details`);\n        // Not sure why but history replace does not update guid\n        this.setState({guid: nGuid});\n      } catch (error) {\n        alert(error);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n\n    this.taskStatus = () => {\n      if (!this.state.task.startTime)\n        return \"You haven't started this task\"\n      if (this.state.task.startTime && !this.state.task.endTime)\n        return \"You're currently working on this task\"\n      if (this.state.task.startTime && this.state.task.endTime)\n        return \"You've completed this task\"\n      return \"Error\"\n    }\n\n    this.taskDuration = () => {\n      const toSeconds = this.state.task.duration / 1000;\n      const toMinutes = toSeconds / 60;\n      const rounded = Math.round(toMinutes * 100) / 100;\n\t\t\treturn `${rounded} minutes`;\n    }\n\n    this.handleSubmitStress = async stress => {\n      try {\n        this.setState({loading: 'Updating ...'});\n        const task = this.state.task;\n        task.stress = stress;\n\n        await api.updateTask(this.state.guid, task);\n        this.props.history.replace(`/`);\n      } catch (error) {\n        alert(error);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({loading: true});\n      const task = await api.getTaskLatest(this.props.match.params.id); \n      if (task.guid !== this.props.match.params.id) {\n        this.props.history.replace(`/tasks/${task.guid}/details`);\n      }\n\n      this.setState({\n      \tguid: task.guid,\n      \ttask: task.data\n      });\n    } catch (error) {\n      alert(error);\n    } finally {\n      if (!this.componentUnmounted)\n        this.setState({loading: undefined});\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <div>\n        <MyNavBar/>\n          <AsyncAwareContainer loading={this.state.loading}>\n          \t<Container className=\"text-center\">\n          \t{\n          \t\t(this.state.task.startTime && this.state.task.endTime) ?\n\n          \t\t(<div>\n\t\t\t\t\t      <Card style={{'backgroundColor': '#2799F9', 'color': 'white'}}>\n          \t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t  <h2>Task {this.state.task.name} completed</h2>\n\t\t\t\t\t\t\t\t\t  <br/><br/>\n\t\t\t\t\t\t\t\t\t  <h5>Time spent</h5>\n\t\t\t\t\t\t\t\t\t  <h6>{this.taskDuration()}</h6>\n\t\t\t\t\t\t\t\t  </Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t  <br/><br/>\n          \t\t\t\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t(typeof this.state.task.stress === 'number') ?\n\t\t\t\t\t\t\t\t\t<h6 style={{'color': '#2699FB'}}>Submitted stress level: {this.state.task.stress}</h6>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<StressCollector submitStress={this.handleSubmitStress} />\n\t\t\t\t\t\t\t\t}\n          \t\t</div>)\n\n          \t\t:\n\n\t          \t(<div>\n\t          \t\t<Card style={{'backgroundColor': '#2799F9', 'color': 'white'}}>\n\t          \t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t  <h2>{this.state.task.name}</h2>\n\t\t\t\t\t\t\t\t\t  <br/><br/>\n\t\t\t\t\t\t\t\t\t  <h6>{this.taskStatus()}</h6>\n\t\t\t\t\t\t\t\t\t  <br/><br/><br/>\n\t\t\t\t\t\t\t\t\t  <h5>Task Details</h5>\n\t\t\t\t\t\t\t\t\t  <h6>Start Date: {this.state.task.startTime ? moment(this.state.task.startTime).format(timeFormat) : ''} | End Date: {this.state.task.endTime ? moment(this.state.task.endTime).format(timeFormat) : ''}</h6>\n\t\t\t\t\t\t\t\t  </Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t  <style type=\"text/css\">\n\t\t\t\t\t\t\t\t    {`\n\t\t\t\t\t\t\t\t\t    .btn-flat {\n\t\t\t\t\t\t\t\t\t      background-color: #2799F9;\n\t\t\t\t\t\t\t\t\t      color: white;\n\t\t\t\t\t\t\t\t\t    }\n\n\t\t\t\t\t\t\t\t\t    .btn-xxl {\n\t\t\t\t\t\t\t\t\t      margin: 1rem 1rem;\n\t\t\t\t\t\t\t\t\t      font-size: 3rem;\n\t\t\t\t\t\t\t\t\t      height: 20rem;\n\t\t\t\t\t\t\t\t\t      width: 20rem;\n\t\t\t\t\t\t\t\t\t      border-radius: 40rem;\n\t\t\t\t\t\t\t\t\t  \t}\n\t\t\t\t\t\t\t\t    `}\n\t\t\t\t\t\t\t\t  </style>\n\n\n\t\t\t\t\t\t\t\t  { !this.state.task.startTime ?\n\t\t\t            \t\t<Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(START)}>Start</Button>\n\t\t\t              : <div/>\n\t\t\t            }\n                  { this.state.task.startTime && !this.state.task.endTime && !this.state.task.paused ?\n                      <Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(PAUSE)}>Pause</Button>\n                    : <div/>\n                  }\n                  { this.state.task.startTime && !this.state.task.endTime && this.state.task.paused ?\n                      <Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(CONTINUE)}>Continue</Button>\n                    : <div/>\n                  }\n\t\t\t            { !this.state.task.endTime && this.state.task.startTime ?\n\t\t\t                <Button variant=\"flat\" size=\"xxl\" onClick={() => this.changeTask(END)}>Stop</Button>\n\t\t\t              : <div/>\n\t\t\t            }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>)\n\t          }\n\t\t\t\t\t\t</Container>\n          </AsyncAwareContainer>\n      </div>\n    );\n  }\n}\n\nclass StressCollector extends Component {\n\tstate = {\n    value: 5\n  };\n\n  onEnd = () => (render, handle, value, un, percent) => {\n    this.setState({\n    \tvalue: percent/10\n    });\n  };\n\n  render() {\n    return (\n    \t<div>\n    \t\t<h6 style={{'color': '#2699FB'}}>Drag the scroll bar up to indicate how stressful you felt in completing this activity</h6>\n    \t\t<div style={{\n    \t\t\tmargin: '2rem',\n    \t\t\tdisplay: 'flex',\n\t\t\t\t  justifyContent: 'center'\n\t\t\t\t}}>\n\t\t      <Nouislider\n\t\t      \tclassName=\"text-center\"\n\t\t      \tstyle={{'height': '35rem'}}\n\t\t        start={this.state.value}\n\t\t        orientation=\"vertical\"\n\t\t        direction=\"rtl\"\n\t\t        range={{\n\t\t          min: 0,\n\t\t          max: 10\n\t\t        }}\n\t\t        step={0.1}\n\t\t        pips={{\n\t\t        \tmode: 'values',\n\t\t\t        values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n\t\t\t        density: 1\n\t\t        }}\n\t\t        onEnd={this.onEnd()}\n\t\t      />\n\t      </div>\n\t      <Table bordered style={{'color': '#2699FB'}}>\n\t\t\t\t  <thead>\n\t\t\t\t    <tr>\n\t\t\t\t      <th>Score</th>\n\t\t\t\t      <th>Meaning</th>\n\t\t\t\t    </tr>\n\t\t\t\t  </thead>\n\t\t\t\t  <tbody>\n\t\t\t\t    <tr>\n\t\t\t\t      <td>1 - 4 = low stress</td>\n\t\t\t\t      <td>You are likely not psychologically distressed</td>\n\t\t\t\t    </tr>\n\t\t\t\t    <tr>\n\t\t\t\t      <td>4.1 - 7 = moderate stress</td>\n\t\t\t\t      <td>You are likely mildly psychologically distressed</td>\n\t\t\t\t    </tr>\n\t\t\t\t    <tr>\n\t\t\t\t      <td>7.1 - 10 = high stress</td>\n\t\t\t\t      <td>You are likely to be severely psychologically distressed</td>\n\t\t\t\t    </tr>\n\t\t\t\t  </tbody>\n\t\t\t\t</Table>\n\n\t      <Button style={{'backgroundColor': '#2799F9'}} onClick={() => this.props.submitStress(this.state.value)}>Submit</Button>\n      </div>\n    );\n  }\n}\n\n// import { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider';\n// import { Handle, Track, Tick } from './SliderComponents';\n\n// const sliderStyle: React.CSSProperties = {\n//   position: 'relative',\n//   height: '400px',\n//   marginLeft: '45%'\n// };\n// const railStyle: React.CSSProperties = {\n//   position: 'absolute',\n//   width: '14px',\n//   height: '100%',\n//   cursor: 'pointer',\n//   marginLeft: '-1px',\n//   borderRadius: '7px',\n//   backgroundColor: 'rgb(155,155,155)'\n// };\n// const domain= [0, 10];\n// const formatTicks = d => d;\n\n// class StressCollector extends Component {\n// \tconstructor() {\n//     super();\n\n//     // react seems to be slow and inconsistent when assigning an object to state,\n//     // set task: null and do console.log in the jsx to see\n//     this.state = {\n//       values: [5]\n//     };\n\n//     this.handleSliderChange = values => {\n// \t    this.setState({ values });\n// \t  };\n// \t}\n\n// \trender() {\n// \t\tconst {\n//       state: { values }\n//     } = this;\n\n//     return (\n//     \t<div>\n// \t    \t<h6 style={{'color': '#2699FB'}}>Drag the scroll bar up to indicate how stressful you felt in completing this activity</h6>\n// \t\t\t\t<div style={{ margin: 20 }}>\n// \t        <Slider\n// \t          mode={1}\n// \t          step={0.1}\n// \t          reversed={true}\n// \t          vertical={true}\n// \t          domain={domain}\n// \t          rootStyle={sliderStyle}\n// \t          onChange={this.handleSliderChange}\n// \t          values={values}\n// \t        >\n// \t          <Rail>\n// \t            {({ getRailProps }) => (\n// \t              <div style={railStyle} {...getRailProps()} />\n// \t            )}\n// \t          </Rail>\n// \t          <Handles>\n// \t            {({ handles, getHandleProps }) => (\n// \t              <div className=\"slider-handles\">\n// \t                {handles.map(handle => (\n// \t                  <Handle\n// \t                    key={handle.id}\n// \t                    handle={handle}\n// \t                    domain={domain}\n// \t                    getHandleProps={getHandleProps}\n// \t                  />\n// \t                ))}\n// \t              </div>\n// \t            )}\n// \t          </Handles>\n// \t          <Tracks left={false}>\n// \t            {({ tracks, getTrackProps }) => (\n// \t              <div className=\"slider-tracks\">\n// \t                {tracks.map(({ id, source, target }) => (\n// \t                  <Track\n// \t                    key={id}\n// \t                    source={source}\n// \t                    target={target}\n// \t                    getTrackProps={getTrackProps}\n// \t                  />\n// \t                ))}\n// \t              </div>\n// \t            )}\n// \t          </Tracks>\n// \t          <Ticks values={[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}>\n// \t            {({ ticks }) => (\n// \t              <div className=\"slider-ticks\">\n// \t                {ticks.map(tick => (\n// \t                  <Tick\n// \t                    key={tick.id}\n// \t                    format={formatTicks}\n// \t                    tick={tick}\n// \t                    count={ticks.length}\n// \t                  />\n// \t                ))}\n// \t              </div>\n// \t            )}\n// \t          </Ticks>\n// \t        </Slider>\n// \t      </div>\n\n// \t      <Table bordered style={{'color': '#2699FB'}}>\n// \t\t\t\t  <thead>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <th>Score</th>\n// \t\t\t\t      <th>Meaning</th>\n// \t\t\t\t    </tr>\n// \t\t\t\t  </thead>\n// \t\t\t\t  <tbody>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>1 - 4 = low stress</td>\n// \t\t\t\t      <td>You are likely not psychologically distressed</td>\n// \t\t\t\t    </tr>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>4.1 - 7 = moderate stress</td>\n// \t\t\t\t      <td>You are likely mildly psychologically distressed</td>\n// \t\t\t\t    </tr>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>7.1 - 10 = high stress</td>\n// \t\t\t\t      <td>You are likely to be severely psychologically distressed</td>\n// \t\t\t\t    </tr>\n// \t\t\t\t  </tbody>\n// \t\t\t\t</Table>\n\n// \t      <Button style={{'backgroundColor': '#2799F9'}} onClick={() => this.props.submitStress(this.state.values[0])}>Submit</Button>\n//       </div>\n//     );\n// \t}\n// }\n\nexport default DetailsPage;","import React from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nexport default () => (\n  <Navbar bg=\"light\" variant=\"dark\">\n    <Nav className=\"mr-auto\">\n      <LinkContainer to=\"/login\">\n        <Button variant=\"link\">Login</Button>\n      </LinkContainer>\n      <LinkContainer to=\"/register\">\n        <Button variant=\"link\">Register</Button>\n      </LinkContainer>\n    </Nav>\n  </Navbar>\n);\n","import React from \"react\";\nimport Auth from \"../../stores/auth\";\nimport api from \"../../Data/api\";\nimport FormRow from '../FormRow';\nimport MyAuthNavBar from '../MyAuthNavBar';\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { Button, Container } from \"react-bootstrap\";\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (Auth.loggedIn()) {\n      this.props.history.replace(\"/\");\n    }\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      role: \"student\"\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleRegister = async event => {\n      try {\n        this.setState({loading: 'Registering'});\n        await api.register(this.state.email, this.state.password, this.state.role);\n        Auth.setToken(await api.login(this.state.email, this.state.password));\n        this.props.history.replace(\"/\");\n      } catch (error) {\n        alert(error);\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    return (\n      <div>\n        <MyAuthNavBar/>\n        <Container>\n          <h1>Register</h1>\n          <AsyncAwareContainer loading={this.state.loading}>\n            <FormRow name=\"email\" onChange={this.handleChange} />\n            <FormRow name=\"password\" type=\"password\" onChange={this.handleChange} />\n            <Button onClick={this.handleRegister}>Register</Button>\n          </AsyncAwareContainer>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPage;","export default {\n  isConsented() {\n    return localStorage.getItem('consent') === '1';\n  },\n  doConsent() {\n    localStorage.setItem('consent', '1');\n  },\n  undoConsent() {\n    localStorage.removeItem('consent');\n  },\n};\n","import React from \"react\";\nimport Auth from \"../../stores/auth\";\nimport Consent from \"../../stores/consent\";\nimport api from \"../../Data/api\";\nimport logo from \"../logo.png\";\nimport FormRow from '../FormRow';\nimport MyAuthNavBar from '../MyAuthNavBar';\nimport { Button, Container, Image, Row, Col } from \"react-bootstrap\";\nimport AsyncAwareContainer from '../AsyncAwareContainer';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { IoMdArrowRoundForward } from 'react-icons/io';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (Auth.loggedIn()) {\n      this.props.history.replace(\"/\");\n    }\n\n    this.state = {\n      email: \"test1@test.com\",\n      password: \"123\"\n    };\n\n    this.handleChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    }\n\n    this.handleLogin = async event => {\n      try {\n        this.setState({loading: 'Logging in'});\n        Auth.setToken(await api.login(this.state.email, this.state.password));\n        this.props.history.replace(\"/\");\n      } catch (error) {\n        alert(\"Invalid email or password\");\n      } finally {\n        if (!this.componentUnmounted)\n          this.setState({loading: undefined});\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n  }\n\n  render() {\n    if (window.FOR_INSTRUCTOR) {\n      return (\n        <div>\n          <Container style={{'margin': '1rem'}}>\n            <Row style={{\n              'minHeight': '100vh',\n              'minWidth': '98vw'\n            }}>\n                <Col style={{\n                  'backgroundColor': '#2699fb',\n                  'display': 'flex',\n                  'alignItems': 'center',\n                  'justifyContent': 'center',\n                  'color': 'white'\n                }}>\n                  <div style={{width: '20rem'}}>\n                    <h5>Welcome to CD</h5>\n                    <hr style={{'borderTop': 'solid'}}/>\n                    <h6 style={{'fontWeight': 'lighter'}}>\n                      Welcome to the CD app for instructors. Login and to access\n                    </h6>\n                    <br/>\n                    <Button style={{\n                      'borderColor': 'white',\n                      'fontWeight': 'bold',\n                      'color': 'white'\n                    }} variant=\"outline-dark\">Learn more</Button>\n                  </div>\n                </Col>\n                <Col style={{\n                  'margin': '20% 0 20% 0',\n                  'color': '#2699FB'\n                }}>\n                  <Image src={logo} style={{width: '10rem'}} fluid />\n                  {\n                  Consent.isConsented() ?\n                    <AsyncAwareContainer loading={this.state.loading}>\n                      <div className=\"text-center\">\n                        <h4>Sign in</h4>\n                        <br/>\n                        <FormRow name=\"email\" placeholder=\"User ID\"  onChange={this.handleChange} />\n                        <FormRow name=\"password\" placeholder=\"Password\"  type=\"password\" onChange={this.handleChange} />\n                        <Button size='sm' onClick={this.handleLogin} block><IoMdArrowRoundForward/></Button>\n                      </div>\n                    </AsyncAwareContainer>\n                  :\n                    <div>\n                      <p style={{color: '#2699FB'}}> To start using this app, you must first give your consent to participate in the study: Impact of curriculum overload on students' mental health using the Curriculum Densitometer </p>\n                      <LinkContainer to={`/consent`} replace>\n                        <Button variant=\"primary\">\n                          Give consent\n                        </Button>\n                      </LinkContainer>\n                    </div>\n                  }\n                </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <MyAuthNavBar/>\n        <Container className=\"text-center\">\n          <Image src={logo} style={{margin: '5rem', width: '15rem'}} fluid />\n          {\n            Consent.isConsented() ?\n              <AsyncAwareContainer loading={this.state.loading}>\n                <FormRow name=\"email\" placeholder=\"email\"  onChange={this.handleChange} />\n                <FormRow name=\"password\" placeholder=\"password\"  type=\"password\" onChange={this.handleChange} />\n                <Button onClick={this.handleLogin}>Log in</Button>\n              </AsyncAwareContainer>\n            :\n              <div>\n                <p style={{color: 'blue'}}> To start using this app, you must first give your consent to participate in the study: Impact of curriculum overload on students' mental health using the Curriculum Densitometer </p>\n                <LinkContainer to={`/consent`} replace>\n                  <Button variant=\"primary\">\n                    Give consent\n                  </Button>\n                </LinkContainer>\n              </div>\n          }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;","import React from \"react\";\nimport Consent from \"../../stores/consent\";\nimport MyAuthNavBar from '../MyAuthNavBar';\nimport { Button } from \"react-bootstrap\";\nimport consentPdf from \"../consent.pdf\";\nimport PDFViewer from \"mgr-pdf-viewer-react\";\n\nclass ConsentPage extends React.Component {\n  state = {\n    scale: 1\n  }\n  increaseScale = () => this.setState(({ scale }) => ({ scale: scale + 0.2 }))\n  decreaseScale = () => this.setState(({ scale }) => ({ scale: scale - 0.2 }))\n\n  handleConsent = event => {\n    Consent.doConsent();\n    this.props.history.replace(\"/login\");\n  }\n\n  render() {\n    return (\n      <div>\n        <style type=\"text/css\">\n          {`\n            .customViewer {\n              margin: 0;\n              padding: 0;\n              width: 30rem;\n              text-align: left;\n            }\n            .customViewer > div:nth-child(1) {\n              margin: 0;\n              padding: 0;\n              width: 30rem;\n            }\n            .customPrevBtn {\n              cursor: pointer;\n              display: inline-block;\n              margin: 0;\n              width: 3rem;\n              color: white;\n              background-color: black;\n              border-width: 0.1rem;\n              border-style: solid;\n              border-radius: 0.5rem;\n            }\n            .customNextBtn {\n              cursor: pointer;\n              display: inline-block;\n              margin: 0;\n              width: 3rem;\n              color: white;\n              background-color: black;\n              border-width: 0.1rem;\n              border-style: solid;\n              border-radius: 0.5rem;\n            }\n            .customPages {\n              display: inline-block;\n              width: 15rem;\n            }\n            .customWrapper {\n              height: 3rem;\n              font-size: 1.2rem;\n              background-color: #fff;\n            }\n          `}\n        </style>\n        <Button variant=\"light\" onClick={this.decreaseScale}>-</Button>\n        <span>Scale: {this.state.scale}</span>\n        <Button variant=\"light\" onClick={this.increaseScale}>+</Button>\n        <PDFViewer\n          document={{url: consentPdf}}\n          css=\"customViewer\"\n          scale={this.state.scale}\n          navigation={{\n            css: {\n              previousPageBtn: 'customPrevBtn',\n              nextPageBtn: 'customNextBtn',\n              pages: 'customPages',\n              wrapper: 'customWrapper'\n            }\n          }}\n        />\n        <div style={{\n          margin: '2rem',\n          display: 'flex',\n          justifyContent: 'center'\n        }}>\n          <Button size=\"lg\" className=\"text-center\" variant=\"primary\" onClick={this.handleConsent}>\n            Give consent\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConsentPage;","import React from \"react\";\nimport { HashRouter, Switch, Redirect, Route } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage/HomePage\"\nimport IncludePage from \"./components/IncludePage/IncludePage\"\nimport DetailsPage from \"./components/DetailsPage/DetailsPage\"\nimport RegisterPage from \"./components/RegisterPage/RegisterPage\"\nimport LoginPage from \"./components/LoginPage/LoginPage\"\nimport ConsentPage from \"./components/ConsentPage/ConsentPage\"\nimport Auth from \"./stores/auth\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        Auth.loggedIn() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction LogoutRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        {\n          Auth.logout();\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n      }\n    />\n  );\n}\n\n// Followed https://github.com/gothinkster/react-mobx-realworld-example-app\n// To adopt mobx faster later on\nexport default class App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n          <Route exact path=\"/consent\" component={ConsentPage} />\n          <LogoutRoute exact path=\"/logout\" />\n          <PrivateRoute exact path=\"/\" component={HomePage} />\n          <PrivateRoute exact path=\"/tasks/include\" component={IncludePage} />\n          <PrivateRoute exact path=\"/tasks/:id/details\" component={DetailsPage} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}